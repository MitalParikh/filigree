{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let InViewDirective = /*#__PURE__*/(() => {\n  class InViewDirective {\n    constructor(el, ngZone) {\n      this.el = el;\n      this.ngZone = ngZone; //@Output() visibilityChangeEvent = new EventEmitter<IntersectionStatus>();\n\n      this.visible = new EventEmitter();\n      this.destroy$ = new Subject();\n    }\n\n    ngOnInit() {\n      //const elToObserve = this.myDiv.nativeElement.innerHTML; // template \n      //const el = document.getElementbyId('stripe2'); \n      //const elToObserve = this.el.parentElement;\n      const threshold = 0.5; //alert('element' + this.el);\n\n      this.ngZone.runOutsideAngular(() => {\n        this.observer = new IntersectionObserver(entries => {\n          entries.forEach(e => {\n            this.visible.emit(e.isIntersecting); //alert('element' + e);\n          });\n        }, {\n          threshold\n        });\n        this.observer.observe(this.el.nativeElement);\n      });\n      /*const config = {\r\n        root: null,\r\n        rootMargin: this.intersectionRootMargin,\r\n        threshold: [0.8]\r\n      };\r\n            fromIntersectionObserver(\r\n        el,\r\n        config,\r\n        this.intersectionDebounce\r\n      ).pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe((status: IntersectionStatus) => {\r\n      \r\n          this.visibilityChangeEvent.emit(status);\r\n          \r\n      });\r\n      alert('event emitted' + status);*/\n    }\n\n    ngOnDestroy() {\n      this.destroy$;\n    }\n\n  }\n\n  InViewDirective.ɵfac = function InViewDirective_Factory(t) {\n    return new (t || InViewDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  InViewDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InViewDirective,\n    selectors: [[\"\", \"inView\", \"\"]],\n    outputs: {\n      visible: \"visible\"\n    }\n  });\n  return InViewDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}