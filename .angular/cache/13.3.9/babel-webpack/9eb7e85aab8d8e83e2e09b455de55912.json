{"ast":null,"code":"import { trigger, state, style, animate, transition, query, stagger // ...\n} from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction SlideShowComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx_r0.slidesPath, \"/\", slide_r1, \".jpg\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let SlideShowComponent = /*#__PURE__*/(() => {\n  class SlideShowComponent {\n    constructor() {\n      this.slidesPath = '';\n      this.slides = [];\n    }\n\n    ngOnChanges(changes) {\n      const log = [];\n\n      for (const propName in changes) {\n        if (propName == \"flag\") {\n          const changedProp = changes[propName];\n          log.push(\"flag: previous: \" + changedProp.previousValue + \" current: \" + changedProp.currentValue);\n        }\n      }\n\n      console.log(log.join(', '));\n    }\n\n  }\n\n  SlideShowComponent.ɵfac = function SlideShowComponent_Factory(t) {\n    return new (t || SlideShowComponent)();\n  };\n\n  SlideShowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SlideShowComponent,\n    selectors: [[\"app-slide-show\"]],\n    inputs: {\n      slidesPath: \"slidesPath\",\n      slides: \"slides\",\n      flag: \"flag\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"mySlides\", \"style\", \"top:10%\", 4, \"ngFor\", \"ngForOf\"], [1, \"mySlides\", 2, \"top\", \"10%\"], [2, \"width\", \"auto\", \"height\", \"500px\", 3, \"src\"]],\n    template: function SlideShowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, SlideShowComponent_span_1_Template, 2, 2, \"span\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@slideShow\", ctx.slides.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box}.mySlides[_ngcontent-%COMP%]{opacity:1;position:absolute;margin-left:10%}.active[_ngcontent-%COMP%]{background-color:#717171;z-index:0;position:relative}.fade[_ngcontent-%COMP%]{-webkit-animation-name:fade;-webkit-animation-duration:1.5s;animation-name:fade;animation-duration:1.5s}@keyframes fade{0%{opacity:.4}to{opacity:1}}@media only screen and (max-width: 300px){.text[_ngcontent-%COMP%]{font-size:11px}}\"],\n    data: {\n      animation: [trigger('slideShow', [transition('* => *', [query(':enter', [style({\n        opacity: 0\n      }), stagger(4000, [animate('1s', style({\n        opacity: 1\n      }))])], {\n        optional: true\n      })])]), trigger('hover', [state('invisible', style({\n        opacity: 0\n      })), state('visible', style({\n        opacity: 1\n      })), transition('invisible => visible', [animate('0.10s')]), transition('visible => invisible', [animate('0.25s 1s ease-out')])])]\n    }\n  });\n  return SlideShowComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}